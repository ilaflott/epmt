# A useful resource:
# https://charlesleifer.com/blog/compiling-sqlite-for-use-with-python-applications/

FROM centos:7

RUN yum update -y
RUN yum install -y unzip bash tcsh nc curl make git gcc postgresql-devel zlib-devel bzip2 bzip2-devel readline-devel sqlite-devel openssl-devel xz xz-devel libffi-devel

# we set SQLITE_MAX_VARIABLE_NUMBER to a limit higher than 999
# to avoid the sqlite OperationalError: Too many variables
# https://stackoverflow.com/questions/7106016/too-many-sql-variables-error-in-django-witih-sqlite3
RUN cd /usr/src && echo "downloading sqlite3" && curl -o sqlite-amalgamation-3300100.zip https://www.sqlite.org/2019/sqlite-amalgamation-3300100.zip && unzip sqlite-amalgamation-3300100.zip && echo "building libsqlite3 with json1 and other useful extensions" && cd sqlite-amalgamation-3300100 && gcc -shared -fPIC -O2  -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_LOAD_EXTENSION -DSQLITE_MAX_VARIABLE_NUMBER=9999 sqlite3.c -o /usr/lib64/libsqlite3.so

RUN cd /usr/src && echo "downloading python" && curl -o Python-3.7.4.tgz https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tgz && tar xzf Python-3.7.4.tgz && cd Python-3.7.4 && echo "building python3" && ./configure --prefix=/usr --enable-shared --enable-optimizations --enable-loadable-sqlite-extensions && make --silent install > /dev/null

RUN ldconfig
COPY ui/requirements-ui.txt.py3 requirements.txt.py3 /tmp/
RUN python3 -V && pip3 install --upgrade pip && pip3 install -r /tmp/requirements-ui.txt.py3 -r /tmp/requirements.txt.py3
RUN pip3 install pyinstaller mkdocs mkdocs-material

RUN yum clean all
RUN rm -rf /usr/src /var/cache/yum
