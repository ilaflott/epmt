#!/usr/bin/env python

if (__name__ == "__main__"):
    # Handle crappy python 2.6 installations
    try:
        import argparse
    except ImportError:
        from sys import stderr
        print >> stderr,"WARNING: system argparse not found, using our own."
        print >> stderr,"WARNING: This python/OS is likely vulnerable to exploits!"
        import argparse26 as argparse
        
    def printText(args):
        print (args)

    parser = argparse.ArgumentParser(prog='epmt')
    subparser = parser.add_subparsers(title="commands", dest="command")
    #subparser = subparser.add_parser('epmt_cmd', help="help, start, source, run, stop, dump, stage, submit, check");
    start_parser = subparser.add_parser('start', help="Begin epmt logging")
    start_parser.add_argument('-j', '--jobid',help="Force job ID instead of getting it from the environment");
    start_parser.set_defaults(epmt_cmd='start')
    dbsize = subparser.add_parser('dbsize', help="database, table, index, tablespace")
    dbsize.add_argument('-n', '--names-list', default=[], nargs='+')
    dbsize.set_defaults(func=printText)
    parser.add_argument('-n', '--dry-run',action='store_true',help="Don't touch the database");
    parser.add_argument('-e', '--error',action='store_true',help="Exit at the first sign of trouble");
    parser.add_argument('-v', '--verbose',action='count',help="Increase level of verbosity/debug")
    #	parser.add_argument('-c', '--csh',action='store_true',help="C-shell mode")
    #	parser.add_argument('-b', '--bash',action='store_true',help="Bash mode")
    parser.add_argument('-a', '--auto',action='store_true',help="Do start/stop when running")
    parser.add_argument('--drop',action='store_true',help="Drop all tables/data and recreate before importing")

    parser.add_argument('--bytes',action='store_true',help="dbsize --bytes")
    parser.add_argument('--json',action='store_true',help="Output JSON dbsizes")
    parser.set_defaults(func=printText)
    args = parser.parse_args()
    from epmt_cmds import epmt_entrypoint
    args.func(args)
    exit(epmt_entrypoint(args))
else:
    print >> stderr,"ERROR: This module cannot be imported."
    exit(1)