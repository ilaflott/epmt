FROM giovtorres/docker-centos7-slurm:latest

RUN yum update -y
RUN yum install -y tcsh environment-modules
RUN yum install -y unzip bash tcsh nc curl make git gcc postgresql-devel zlib-devel bzip2 bzip2-devel readline-devel sqlite-devel openssl-devel xz xz-devel libffi-devel

RUN cd /usr/src && echo "downloading sqlite3" && curl -o sqlite-amalgamation-3300100.zip https://www.sqlite.org/2019/sqlite-amalgamation-3300100.zip && unzip sqlite-amalgamation-3300100.zip && echo "building libsqlite3 with json1 and other useful extensions" && cd sqlite-amalgamation-3300100 && gcc -shared -fPIC -O2  -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_LOAD_EXTENSION -DSQLITE_MAX_VARIABLE_NUMBER=9999 sqlite3.c -o /usr/lib64/libsqlite3.so

ARG python_version=3.9.16
# oh gawd only knows what slurm things this may break, but epmt @ gfdl wants the latest python.
RUN rm -rf /usr/local/bin/python* /usr/local/lib/*python*
RUN cd /usr/src && echo "downloading python" && curl -o Python-${python_version}.tgz https://www.python.org/ftp/python/${python_version}/Python-${python_version}.tgz && tar xzf Python-${python_version}.tgz && cd Python-${python_version} && echo "building python3" && ./configure --prefix=/usr --enable-shared --enable-optimizations --enable-loadable-sqlite-extensions && make --silent install > /dev/null

RUN ldconfig
RUN python3 -V
RUN pip3 install --upgrade pip

RUN yum install -y gcc-c++

COPY requirements.txt.py3 /tmp/
RUN pip3 install -r /tmp/requirements.txt.py3

COPY src/epmt/ui/requirements-ui.txt.py3 /tmp
# RUN pip3 install -r /tmp/requirements-ui.txt.py3 

RUN rm -f /tmp/requirements.txt.py3 /tmp/requirements-ui.txt.py3

RUN yum clean all
RUN rm -rf /var/cache/yum

ARG install_path
ARG epmt_version
ARG epmt_full_release
ARG epmt_python_full_release

WORKDIR ${install_path}
COPY ${epmt_full_release} .
COPY src/dist/${epmt_python_full_release} .
RUN python3 -m pip install ${epmt_python_full_release}

RUN mkdir /usr/lib/python3.9/site-packages/papiex-oss \
    && tar zxf ${epmt_python_full_release}  \
    && mv epmt-${epmt_version}/papiex-epmt-install /usr/lib/python3.9/site-packages/papiex-oss 
#    && rm -rf *.tgz
 
COPY utils/epmt-installer .
RUN ls ${install_path}
RUN echo -ne "\n\n" | ./epmt-installer ${install_path}
ENV PATH="${install_path}/epmt-${epmt_version}/epmt-install/epmt:${PATH}"
RUN rm -f *.tgz epmt-installer

CMD ["/bin/bash", "-c", "sysctl kernel.perf_event_paranoid=1; epmt check; epmt unittest; epmt integration"]
