variables:
  POSTGRES_DB: "EPMT"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "example"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"


cache:
  paths:
    - .cache/pip

services:
  - postgres:latest


build:python3:
  image: rockylinux:8
  script:
    - yum update -y
    - yum install -y findutils unzip bash tcsh nc curl make git gcc postgresql-devel zlib-devel bzip2 bzip2-devel readline-devel sqlite-devel openssl-devel xz xz-devel libffi-devel

    - (cd /usr/src && echo "downloading sqlite3" && curl -o sqlite-amalgamation-3490100.zip https://www.sqlite.org/2025/sqlite-amalgamation-3490100.zip && unzip sqlite-amalgamation-3490100.zip && echo "building libsqlite3 with json1 and other useful extensions" && cd sqlite-amalgamation-3490100 && gcc -shared -fPIC -O2  -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_LOAD_EXTENSION -DSQLITE_MAX_VARIABLE_NUMBER=9999 sqlite3.c -o /usr/lib64/libsqlite3.so)
    
    - (cd /usr/src && echo "downloading python" && curl -o Python-3.9.21.tgz https://www.python.org/ftp/python/3.9.21/Python-3.9.21.tgz && tar xzf Python-3.9.21.tgz && cd Python-3.9.21 && echo "building python3" && ./configure --quiet --prefix=/usr --enable-shared --enable-optimizations --enable-loadable-sqlite-extensions && make --silent install > /dev/null)

    - ldconfig
    - python3 -V
    - pip3 install --upgrade pip

    - yum install -y gcc-c++
    
    - pip3 install -r requirements.txt.py3

    - make epmt-dash
    - make OUTSIDE_DOCKER="YUP" papiex-dist
    - make dist python-dist dist-test

    - pip3 install src/dist/epmt*gz
    - mkdir -p /usr/lib/python3.9/site-packages/papiex-epmt-install
    - ln -s  /usr/lib/python3.9/site-packages/epmt/lib /usr/lib/python3.9/site-packages/papiex-epmt-install/
    - ln -s  /usr/lib/python3.9/site-packages/epmt/bin /usr/lib/python3.9/site-packages/papiex-epmt-install/

    - export PATH='/usr/bin:${PATH}:/usr/local/bin:/usr/local/libexec'

    - /usr/lib/python3.9/site-packages/epmt/test/integration/libs/bats/install.sh /usr/local || echo "tried to install bats from within epmt but failed. keep going!"

    - epmt -v -V && echo "success! :-)" || echo "fail! but keep going..."
    - epmt -v check && echo "success! :-)" || echo "fail! but keep going..."
    #- make check-epmt-check && echo 'epmt check, success' || echo 'epmt check, failed and guarding against sudden exit' 
    - epmt -v unittests && echo "success! :-)" || echo "fail! but keep going..."
    #- make check-unittests && echo 'epmt unittests, success' || echo 'epmt unittests, failed and guarding against sudden exit'
    - epmt -v integration && echo "success! :-)" || echo "fail! but keep going..."
    #- make check-integration-tests && echo 'epmt integration, success' || echo 'epmt integration, failed and guarding against sudden exit' 






