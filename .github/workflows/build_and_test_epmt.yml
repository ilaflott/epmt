name: build_and_test_epmt

on:
  push

# thank you m. lee
# cancel running jobs if theres a newer push
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build-linux:
    runs-on: ubuntu-latest

    #service:
    #  - postgres:latest

    container:
      image: rockylinux:8
      env:
        POSTGRES_DB: 'EPMT'
        POSTGRES_USER: 'postgres'
        POSTGRES_PASSWORD: 'example'
        PIP_CACHE_DIR: '$CI_PROJECT_DIR/.cache/pip'
      options: --privileged

    steps:
      - uses: actions/checkout@v4
      - name: yum install and update
        run: |
          yum update -y
          yum install -y findutils unzip bash tcsh nc curl make git gcc postgresql-devel zlib-devel bzip2 bzip2-devel readline-devel sqlite-devel openssl-devel xz xz-devel libffi-devel

      - name: install and configure sqlite3
        run: |
          cd /usr/src
          echo 'downloading sqlite3'
          curl -o sqlite-amalgamation-3490100.zip https://www.sqlite.org/2025/sqlite-amalgamation-3490100.zip
          unzip sqlite-amalgamation-3490100.zip
          echo 'building libsqlite3 with json1 and other useful extensions'
          cd sqlite-amalgamation-3490100
          gcc -shared -fPIC -O2  -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_LOAD_EXTENSION -DSQLITE_MAX_VARIABLE_NUMBER=9999 sqlite3.c -o /usr/lib64/libsqlite3.so

      - name: install python3
        run: |
          cd /usr/src
          echo 'downloading python'
          curl -o Python-3.9.22.tgz https://www.python.org/ftp/python/3.9.22/Python-3.9.22.tgz
          tar xzf Python-3.9.22.tgz
          cd Python-3.9.22
          echo 'building python3'
          ./configure --quiet --prefix=/usr --enable-shared --enable-optimizations --enable-loadable-sqlite-extensions
          make --silent install > /dev/null

      - name: configure python3 and upgrade pip and grab gcc-c++
        run: |
          ldconfig
          python3 -V
          pip3 install --upgrade pip
          yum install -y gcc-c++

      - name: install requirements
        run: |
          pip3 install -r requirements.txt.py3

      - name: make dash tarball
        run: |
          make epmt-dash

      - name: make papiex tarball
        run: |
          make OUTSIDE_DOCKER='YUP' papiex-dist

      - name: make epmt pip-packaging
        run: |
          make dist python-dist dist-test

      - name: pip install epmt pip-package
        run: |
          ls src/dist/epmt*gz
          pip3 install src/dist/epmt*gz

      - name: create links to papiex executables, adjust path, install bats for integration tests
        run: |
          mkdir -p /usr/lib/python3.9/site-packages/papiex-epmt-install
          ln -s  /usr/lib/python3.9/site-packages/epmt/lib /usr/lib/python3.9/site-packages/papiex-epmt-install/
          ln -s  /usr/lib/python3.9/site-packages/epmt/bin /usr/lib/python3.9/site-packages/papiex-epmt-install/
          export PATH='/usr/bin:${PATH}:/usr/local/libexec:/usr/local/bin'
          /usr/lib/python3.9/site-packages/epmt/test/integration/libs/bats/install.sh /usr/local

      - name: epmt version call and check
        run: |
          epmt -v -V

      - name: epmt check call and check
        run: |
          echo 2 > /proc/sys/kernel/perf_event_paranoid
          epmt -vv check

      - name: python unittest test_anysh call and check
        run: |
          python3 -m unittest -v epmt.test.test_anysh

      - name: python unittest test_cmds call and check
        run: |
          python3 -m unittest -v epmt.test.test_cmds

      - name: python unittest test_db_migration call and check
        run: |
          python3 -m unittest -v epmt.test.test_db_migration

      - name: python unittest test_db_schema call and check
        run: |
          python3 -m unittest -v epmt.test.test_db_schema

      - name: python unittest test_explore call and check
        run: |
          python3 -m unittest -v epmt.test.test_explore

      - name: python unittest test_lib call and check
        run: |
          python3 -m unittest -v epmt.test.test_lib

      - name: python unittest test_outliers call and check
        continue-on-error: true
        run: |
          python3 -m unittest -v epmt.test.test_outliers

      - name: python unittest test_query call and check
        run: |
          python3 -m unittest -v epmt.test.test_query

      - name: python unittest test_run call and check
        run: |
          python3 -m unittest -v epmt.test.test_run

      - name: python unittest test_settings call and check
        run: |
          python3 -m unittest -v epmt.test.test_settings

      - name: python unittest test_shell call and check
        run: |
          python3 -m unittest -v epmt.test.test_shell

      - name: python unittest test_stat call and check
        run: |
          python3 -m unittest -v epmt.test.test_stat

      - name: python unittest test_submit call and check
        run: |
          python3 -m unittest -v epmt.test.test_submit

      - name: epmt integration call and check
        continue-on-error: true
        run: |
          epmt integration

      - name: install pylint
        run: |
          pip install pylint

      - name: run pylint
        continue-on-error: true
        run: |
          pylint --max-line-length 120 --max-args 6 -ry src/epmt

      - name: upload pip installable
        uses: actions/upload-artifact@v4
        with:
          name: epmt-pip-install-TEST
          path: src/dist/epmt-4.11.0.tar.gz
